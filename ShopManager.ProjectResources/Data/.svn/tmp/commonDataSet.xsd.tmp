<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="commonDataSet" targetNamespace="http://tempuri.org/commonDataSet.xsd" xmlns:mstns="http://tempuri.org/commonDataSet.xsd" xmlns="http://tempuri.org/commonDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="CommonQueriesTableAdapter" GeneratorFunctionsComponentClassName="CommonQueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="CommonQueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ShopManager.ProjectResources.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables />
        <Sources>
          <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="[ShopDatabase.mdf].dbo.Additions" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="sp_GetSupplierCredit" MethodsParameterType="CLR" Modifier="Public" Name="sp_GetSupplierCredit" QueryType="Scalar" ScalarCallRetval="System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="sp_GetSupplierCredit">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
<<<<<<< .mine
                <CommandText>SELECT        CASE WHEN SUM(Balances.Balance) IS NOT NULL THEN SUM(Balances.Balance) 
=======
                <CommandText>SELECT        CASE WHEN SUM(Purchases.KiloPrice * Purchases.QuantityInKilos - Purchases.Paid) IS NOT NULL 
                         THEN SUM(Purchases.KiloPrice * Purchases.QuantityInKilos - Purchases.Paid) 
>>>>>>> .r11
                         + Suppliers.BeginningBalance ELSE Suppliers.BeginningBalance END AS Expr1
FROM            Suppliers LEFT OUTER JOIN
                             (SELECT        KiloPrice * N_Kilos + N_Cages * CagePrice - Paid AS Balance, SupplierID
                                FROM            Purchases
                                WHERE        (PurchaseID &lt;= @PurchaseID) OR
                                                         ('True' = @All)) AS Balances ON Suppliers.SupplierID = Balances.SupplierID
GROUP BY Suppliers.SupplierID, Suppliers.BeginningBalance, Suppliers.Name
HAVING        (Suppliers.Name = @supplierName)</CommandText>
                <Parameters>
<<<<<<< .mine
                  <Parameter AllowDbNull="false" AutogeneratedName="supplierName" ColumnName="Name" DataSourceName="ShopDatabase.dbo.Suppliers" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@supplierName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="PurchaseID" ColumnName="" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@PurchaseID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="All" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Boolean" Direction="Input" ParameterName="@All" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
=======
                  <Parameter AllowDbNull="false" AutogeneratedName="supplierName" ColumnName="Name" DataSourceName="[ShopDatabase.mdf].dbo.Suppliers" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@supplierName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
>>>>>>> .r11
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetRawQuantityInKilosBalance" MethodsParameterType="CLR" Modifier="Public" Name="GetRawQuantityInKilosBalance" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetRawQuantityInKilosBalance">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT        CASE WHEN SUM(DISTINCT FridgeStorages.QuantityInKilos) IS NULL THEN 0 ELSE SUM(DISTINCT FridgeStorages.QuantityInKilos) 
                         END - CASE WHEN SUM(DISTINCT FridgeOuts.QuantityInKilos) IS NULL THEN 0 ELSE SUM(DISTINCT FridgeOuts.QuantityInKilos) END AS Balance
FROM            FridgeStorages LEFT OUTER JOIN
                         FridgeOuts ON FridgeStorages.FridgeID = FridgeOuts.FridgeID AND FridgeStorages.RawID = FridgeOuts.RawID
GROUP BY FridgeStorages.FridgeID, FridgeStorages.RawID
HAVING        (FridgeStorages.FridgeID = @FridgeID) AND (FridgeStorages.RawID = @RawID)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="FridgeID" ColumnName="FridgeID" DataSourceName="[ShopDatabase.mdf].dbo.FridgeStorages" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FridgeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FridgeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="RawID" ColumnName="RawID" DataSourceName="[ShopDatabase.mdf].dbo.FridgeStorages" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RawID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RawID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="commonDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="commonDataSet" msprop:Generator_UserDSName="commonDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded" />
    </xs:complexType>
  </xs:element>
</xs:schema>